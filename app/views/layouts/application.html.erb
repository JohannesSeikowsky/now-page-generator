
<!DOCTYPE html>
<html>
<head>
  <title> Now. </title>
  <!-- rails assets -->
  <%= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track' => true %>
  <%= javascript_include_tag 'application', 'data-turbolinks-track' => true %>
  <%= csrf_meta_tags %>
</head>
<body>

  <!-- content -->
  <div class="container_encapsulating">
    <div class="notice"> <%= notice %> </div>
    <%= yield %>
  </div>

  <!-- love -->
  <div class="with_love">
    Made with <i class="fa fa-heart" aria-hidden="true"></i> in Tel Aviv
  </div>

  <!-- debug -->
  <div class="debug_area">
    <%= debug(params) if Rails.env.development? %>
  </div>

  <script type="text/javascript">
    // making surr 'love' stays on the bottom on all pages
    var window_height = $(window).height();
    var body_height = $('body').height();
    if ( window_height > body_height ){Â 
      $('.with_love').css({"position": "absolute", "bottom": "22px", "padding-top": "5px"});
    };
  </script>

</body>
</html>


<!--
  Notion of good-enough first, then editing

  - design directs user after signup / pointer as how to use his/her nowpage
  before lauch:
  - basic edit page
  - error and redirect messages
  - login protection - only right user can edit a nowpage 
  - photo uploading functionality
  - dealing with white space in url? simple way.
  - Logo

  after launch:
  - editing text functionality for user - plugin? / think this can be done after launch
  - wirte "get your own nowpage as javascript 'pop up"
  - getting/giving feedback / external plugin
  - research - what cool external tools are there to use. fun.
  - code editing
  - adding links functionality on page? maybe. decide on this. play around.
-->

